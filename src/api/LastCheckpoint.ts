/*
 * This code was auto generated by AfterShip SDK Generator.
 * Do not edit the class manually.
 */
import { Request } from "../lib/request";
import { AftershipError, AfterShipErrorCodes } from "../error";
import { GetCheckpointBySlugTrackingNumberQuery } from "../model/GetCheckpointBySlugTrackingNumberQuery";
import { GetCheckpointBySlugTrackingNumberResponse } from "../model/GetCheckpointBySlugTrackingNumberResponse";
import { GetCheckpointByTrackingIdQuery } from "../model/GetCheckpointByTrackingIdQuery";
import { GetCheckpointByTrackingIdResponse } from "../model/GetCheckpointByTrackingIdResponse";

export class LastCheckpointApi {
    private readonly request: Request;

    constructor(request: Request) {
        this.request = request;
    }

    /**
     * Return the tracking information of the last checkpoint of a single tracking.
     */
    public async getCheckpointBySlugTrackingNumber(slug: string, tracking_number: string, query?: GetCheckpointBySlugTrackingNumberQuery, headers?: {[key: string]: any}): Promise<GetCheckpointBySlugTrackingNumberResponse> {
        if (!slug) {
            throw new AftershipError(
                "Invalid params: slug",
                AfterShipErrorCodes.VALUE_INVALID
            );
        }
        if (!tracking_number) {
            throw new AftershipError(
                "Invalid params: tracking_number",
                AfterShipErrorCodes.VALUE_INVALID
            );
        }
        
        return this.request.makeRequest<GetCheckpointBySlugTrackingNumberResponse>({url: `/tracking/2024-04/last_checkpoint/${slug}/${tracking_number}`, method: "GET", query, headers, request_legacy_tag: "", response_legacy_tag: "", is_paging: false})
    }
    /**
     * Return the tracking information of the last checkpoint of a single tracking.
     */
    public async getCheckpointByTrackingId(tracking_id: string, query?: GetCheckpointByTrackingIdQuery, headers?: {[key: string]: any}): Promise<GetCheckpointByTrackingIdResponse> {
        if (!tracking_id) {
            throw new AftershipError(
                "Invalid params: tracking_id",
                AfterShipErrorCodes.VALUE_INVALID
            );
        }
        
        return this.request.makeRequest<GetCheckpointByTrackingIdResponse>({url: `/tracking/2024-04/last_checkpoint/${tracking_id}`, method: "GET", query, headers, request_legacy_tag: "", response_legacy_tag: "", is_paging: false})
    }
}